{"version":3,"sources":["users.js"],"names":["signup","req","res","user","users","find","e","email","body","status","json","error","validateUserSignup","validation","details","message","id","parseInt","length","newUser","firstName","lastName","password","address","isAdmin","token","jwt","sign","expiresIn","push","data"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,MAAMC,IAAI,GAAGC,kBAAMC,IAAN,CAAW,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,KAAF,KAAYN,GAAG,CAACO,IAAJ,CAASD,KAAzB;AAAA,GAAZ,CAAb;;AACA,MAAIJ,IAAJ,EAAU,OAAOD,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,IAAAA,MAAM,EAAE,GAAV;AAAeE,IAAAA,KAAK,EAAE;AAAtB,GAArB,CAAP;;AAFiB,8BAITC,mBAAmBC,UAAnB,CAA8BZ,GAAG,CAACO,IAAlC,CAJS;AAAA,MAInBG,KAJmB,yBAInBA,KAJmB;;AAK3B,MAAIA,KAAJ,EAAW;AACT,WAAOT,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeE,MAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC;AAAvC,KAArB,CAAP;AACD;;AAED,MAAMC,EAAE,GAAGC,QAAQ,CAACb,kBAAMc,MAAN,GAAe,CAAhB,EAAmB,EAAnB,CAAnB;AACA,MAAMC,OAAO,GAAG;AACdH,IAAAA,EAAE,EAAFA,EADc;AAEdT,IAAAA,KAAK,EAAEN,GAAG,CAACO,IAAJ,CAASD,KAFF;AAGda,IAAAA,SAAS,EAAEnB,GAAG,CAACO,IAAJ,CAASY,SAHN;AAIdC,IAAAA,QAAQ,EAAEpB,GAAG,CAACO,IAAJ,CAASa,QAJL;AAKdC,IAAAA,QAAQ,EAAErB,GAAG,CAACO,IAAJ,CAASc,QALL;AAMdC,IAAAA,OAAO,EAAEtB,GAAG,CAACO,IAAJ,CAASe,OANJ;AAOdC,IAAAA,OAAO,EAAEvB,GAAG,CAACO,IAAJ,CAASgB;AAPJ,GAAhB;;AASA,MAAMC,KAAK,GAAGC,yBAAIC,IAAJ,CAASR,OAAT,EAAkB,YAAlB,EAAgC;AAAES,IAAAA,SAAS,EAAE;AAAb,GAAhC,CAAd;;AACA,MAAMR,SAAS,GAAGD,OAAO,CAACC,SAA1B;;AAEAhB,oBAAMyB,IAAN,CAAWV,OAAX;;AAEAjB,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,IAAAA,MAAM,EAAE,GADW;AAEnBM,IAAAA,OAAO,0BAAmBK,SAAnB,MAFY;AAGnBU,IAAAA,IAAI,EAAE;AACJL,MAAAA,KAAK,EAALA,KADI;AAEJT,MAAAA,EAAE,EAAEG,OAAO,CAACH,EAFR;AAGJI,MAAAA,SAAS,EAAED,OAAO,CAACC,SAHf;AAIJC,MAAAA,QAAQ,EAAEF,OAAO,CAACE,QAJd;AAKJd,MAAAA,KAAK,EAAEY,OAAO,CAACZ;AALX;AAHa,GAArB;AAYA,SAAO,KAAP;AACD,CArCD;;eAuCeP,M","sourceRoot":"C:\\Auto-Mart-Website\\server\\controllers","sourcesContent":["/* eslint-disable prefer-destructuring */\r\nimport jwt from 'jsonwebtoken';\r\nimport users from '../models/users';\r\nimport validateUserSignup from '../helpers/users';\r\n\r\nconst signup = (req, res) => {\r\n  const user = users.find(e => e.email === req.body.email);\r\n  if (user) return res.status(405).json({ status: 405, error: 'The email is already registered' });\r\n\r\n  const { error } = validateUserSignup.validation(req.body);\r\n  if (error) {\r\n    return res.status(400).json({ status: 400, error: error.details[0].message });\r\n  }\r\n\r\n  const id = parseInt(users.length + 1, 10);\r\n  const newUser = {\r\n    id,\r\n    email: req.body.email,\r\n    firstName: req.body.firstName,\r\n    lastName: req.body.lastName,\r\n    password: req.body.password,\r\n    address: req.body.address,\r\n    isAdmin: req.body.isAdmin,\r\n  };\r\n  const token = jwt.sign(newUser, 'SECRET_KEY', { expiresIn: '24hrs' });\r\n  const firstName = newUser.firstName;\r\n\r\n  users.push(newUser);\r\n\r\n  res.status(201).json({\r\n    status: 201,\r\n    message: `Welcome back, ${firstName}!`,\r\n    data: {\r\n      token,\r\n      id: newUser.id,\r\n      firstName: newUser.firstName,\r\n      lastName: newUser.lastName,\r\n      email: newUser.email,\r\n    },\r\n  });\r\n\r\n  return false;\r\n};\r\n\r\nexport default signup;\r\n"]}