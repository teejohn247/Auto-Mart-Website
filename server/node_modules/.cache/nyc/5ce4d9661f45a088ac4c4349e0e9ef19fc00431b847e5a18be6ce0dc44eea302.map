{"version":3,"sources":["updatePrice.js"],"names":["price","req","res","validatePricePrice","validation","body","error","status","json","details","message","orderId","params","id","orderIndex","order","findIndex","o","parseInt","firstOrder","EditedOrder","card_id","created_on","Date","old_price_offered","price_offered","new_price_offered","car_id","data"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,8BACRC,wBAAmBC,UAAnB,CAA8BH,GAAG,CAACI,IAAlC,CADQ;AAAA,MAClBC,KADkB,yBAClBA,KADkB;;AAE1B,MAAIA,KAAJ,EAAW;AACTJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBD,MAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC;AAFL,KAArB;AAIA;AACD;;AACD,MAAMC,OAAO,GAAGV,GAAG,CAACW,MAAJ,CAAWC,EAA3B;;AACA,MAAMC,UAAU,GAAGC,kBAAMC,SAAN,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACJ,EAAF,KAASK,QAAQ,CAACP,OAAD,EAAU,EAAV,CAArB;AAAA,GAAjB,CAAnB;;AACA,MAAIG,UAAU,GAAG,CAAC,CAAlB,EAAqB;AACnB,QAAMK,UAAU,GAAGJ,kBAAMD,UAAN,CAAnB;;AACA,QAAIK,UAAU,CAACZ,MAAX,KAAsB,SAA1B,EAAqC;AACnCL,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,QAAAA,MAAM,EAAE,GADW;AAEnBD,QAAAA,KAAK,EAAE;AAFY,OAArB;AAIA;AACD;;AACD,QAAMc,WAAW,GAAG;AAClBP,MAAAA,EAAE,EAAEM,UAAU,CAACN,EADG;AAElBQ,MAAAA,OAAO,EAAEF,UAAU,CAACE,OAFF;AAGlBC,MAAAA,UAAU,EAAEC,IAAI,EAHE;AAIlBhB,MAAAA,MAAM,EAAEY,UAAU,CAACZ,MAJD;AAKlBiB,MAAAA,iBAAiB,EAAEL,UAAU,CAACM,aALZ;AAMlBC,MAAAA,iBAAiB,EAAEzB,GAAG,CAACI,IAAJ,CAASoB;AANV,KAApB;AAQAV,sBAAMD,UAAN,IAAoB;AAClBD,MAAAA,EAAE,EAAEM,UAAU,CAACN,EADG;AAElBc,MAAAA,MAAM,EAAER,UAAU,CAACQ,MAFD;AAGlBL,MAAAA,UAAU,EAAEF,WAAW,CAACE,UAHN;AAIlBf,MAAAA,MAAM,EAAEY,UAAU,CAACZ,MAJD;AAKlBP,MAAAA,KAAK,EAAEmB,UAAU,CAACnB,KALA;AAMlByB,MAAAA,aAAa,EAAEL,WAAW,CAACM;AANT,KAApB;AAQAxB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBqB,MAAAA,IAAI,EAAER;AAFa,KAArB;AAIA;AACD;;AACDlB,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,IAAAA,MAAM,EAAE,GADW;AAEnBD,IAAAA,KAAK,EAAE;AAFY,GAArB;AAID,CA9CD;;eAgDeN,K","sourceRoot":"G:\\Auto-Mart-Website\\server\\controllers","sourcesContent":["import validatePricePrice from '../helpers/updatePrice';\r\nimport order from '../models/order';\r\n\r\nconst price = (req, res) => {\r\n  const { error } = validatePricePrice.validation(req.body);\r\n  if (error) {\r\n    res.status(400).json({\r\n      status: 400,\r\n      error: error.details[0].message,\r\n    });\r\n    return;\r\n  }\r\n  const orderId = req.params.id;\r\n  const orderIndex = order.findIndex(o => o.id === parseInt(orderId, 10));\r\n  if (orderIndex > -1) {\r\n    const firstOrder = order[orderIndex];\r\n    if (firstOrder.status !== 'pending') {\r\n      res.status(400).json({\r\n        status: 400,\r\n        error: 'you can change the price of pending purchasing orders only',\r\n      });\r\n      return;\r\n    }\r\n    const EditedOrder = {\r\n      id: firstOrder.id,\r\n      card_id: firstOrder.card_id,\r\n      created_on: Date(),\r\n      status: firstOrder.status,\r\n      old_price_offered: firstOrder.price_offered,\r\n      new_price_offered: req.body.price_offered,\r\n    };\r\n    order[orderIndex] = {\r\n      id: firstOrder.id,\r\n      car_id: firstOrder.car_id,\r\n      created_on: EditedOrder.created_on,\r\n      status: firstOrder.status,\r\n      price: firstOrder.price,\r\n      price_offered: EditedOrder.new_price_offered,\r\n    };\r\n    res.status(200).json({\r\n      status: 200,\r\n      data: EditedOrder,\r\n    });\r\n    return;\r\n  }\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'order not found',\r\n  });\r\n};\r\n\r\nexport default price;\r\n"]}