{"version":3,"sources":["updatePosted.js"],"names":["price","req","res","validatePostedPrice","validation","body","error","status","json","details","message","carId","params","id","updatePriceIndex","cars","findIndex","p","parseInt","dbData","updatedPrice","owner","createdOn","Date","state","manufacturer","model","body_type","data"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,8BACRC,yBAAoBC,UAApB,CAA+BH,GAAG,CAACI,IAAnC,CADQ;AAAA,MAClBC,KADkB,yBAClBA,KADkB;;AAE1B,MAAIA,KAAJ,EAAW;AACTJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBD,MAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC;AAFL,KAArB;AAIA;AACD;;AACD,MAAMC,KAAK,GAAGV,GAAG,CAACW,MAAJ,CAAWC,EAAzB;;AACA,MAAMC,gBAAgB,GAAGC,qBAAKC,SAAL,CAAe,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACJ,EAAF,KAASK,QAAQ,CAACP,KAAD,EAAQ,EAAR,CAArB;AAAA,GAAhB,CAAzB;;AACA,MAAIG,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;AACzB,QAAMK,MAAM,GAAGJ,qBAAKD,gBAAL,CAAf;AACA,QAAMM,YAAY,GAAG;AACnBP,MAAAA,EAAE,EAAEM,MAAM,CAACN,EADQ;AAEnBQ,MAAAA,KAAK,EAAEF,MAAM,CAACE,KAFK;AAGnBC,MAAAA,SAAS,EAAEC,IAAI,EAHI;AAInBC,MAAAA,KAAK,EAAEL,MAAM,CAACK,KAJK;AAKnBjB,MAAAA,MAAM,EAAEY,MAAM,CAACZ,MALI;AAMnBP,MAAAA,KAAK,EAAEC,GAAG,CAACI,IAAJ,CAASL,KANG;AAOnByB,MAAAA,YAAY,EAAEN,MAAM,CAACM,YAPF;AAQnBC,MAAAA,KAAK,EAAEP,MAAM,CAACO,KARK;AASnBC,MAAAA,SAAS,EAAER,MAAM,CAACQ;AATC,KAArB;AAWAZ,yBAAKD,gBAAL,IAAyB;AACvBD,MAAAA,EAAE,EAAEM,MAAM,CAACN,EADY;AAEvBQ,MAAAA,KAAK,EAAEF,MAAM,CAACE,KAFS;AAGvBC,MAAAA,SAAS,EAAEF,YAAY,CAACE,SAHD;AAIvBE,MAAAA,KAAK,EAAEL,MAAM,CAACK,KAJS;AAKvBjB,MAAAA,MAAM,EAAEY,MAAM,CAACZ,MALQ;AAMvBP,MAAAA,KAAK,EAAEoB,YAAY,CAACpB,KANG;AAOvByB,MAAAA,YAAY,EAAEN,MAAM,CAACM,YAPE;AAQvBC,MAAAA,KAAK,EAAEP,MAAM,CAACO,KARS;AASvBC,MAAAA,SAAS,EAAER,MAAM,CAACQ;AATK,KAAzB;AAWAzB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBqB,MAAAA,IAAI,EAAER;AAFa,KAArB;AAIA;AACD;;AACDlB,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,IAAAA,MAAM,EAAE,GADW;AAEnBD,IAAAA,KAAK,EAAE;AAFY,GAArB;AAID,CA7CD;;eA8CeN,K","sourceRoot":"G:\\Auto-Mart-Website\\server\\controllers","sourcesContent":["import validatePostedPrice from '../helpers/updatePosted';\r\nimport cars from '../models/postCars';\r\n\r\nconst price = (req, res) => {\r\n  const { error } = validatePostedPrice.validation(req.body);\r\n  if (error) {\r\n    res.status(400).json({\r\n      status: 400,\r\n      error: error.details[0].message,\r\n    });\r\n    return;\r\n  }\r\n  const carId = req.params.id;\r\n  const updatePriceIndex = cars.findIndex(p => p.id === parseInt(carId, 10));\r\n  if (updatePriceIndex > -1) {\r\n    const dbData = cars[updatePriceIndex];\r\n    const updatedPrice = {\r\n      id: dbData.id,\r\n      owner: dbData.owner,\r\n      createdOn: Date(),\r\n      state: dbData.state,\r\n      status: dbData.status,\r\n      price: req.body.price,\r\n      manufacturer: dbData.manufacturer,\r\n      model: dbData.model,\r\n      body_type: dbData.body_type,\r\n    };\r\n    cars[updatePriceIndex] = {\r\n      id: dbData.id,\r\n      owner: dbData.owner,\r\n      createdOn: updatedPrice.createdOn,\r\n      state: dbData.state,\r\n      status: dbData.status,\r\n      price: updatedPrice.price,\r\n      manufacturer: dbData.manufacturer,\r\n      model: dbData.model,\r\n      body_type: dbData.body_type,\r\n    };\r\n    res.status(200).json({\r\n      status: 200,\r\n      data: updatedPrice,\r\n    });\r\n    return;\r\n  }\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'car post not found',\r\n  });\r\n};\r\nexport default price;\r\n"]}