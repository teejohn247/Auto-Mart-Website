{"version":3,"sources":["purchaseOrder.js"],"names":["Order","req","res","validateOrder","validation","body","error","status","json","details","message","id","parseInt","order","length","newOrder","buyer","car_id","amount","userId","users","find","b","carId","cars","c","push","data","created_on","format","price","price_offered"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,8BACRC,2BAAcC,UAAd,CAAyBH,GAAG,CAACI,IAA7B,CADQ;AAAA,MAClBC,KADkB,yBAClBA,KADkB;;AAE1B,MAAIA,KAAJ,EAAW;AACT,WAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeD,MAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC;AAAvC,KAArB,CAAP;AACD;;AAED,MAAMC,EAAE,GAAGC,QAAQ,CAACC,0BAAMC,MAAN,GAAe,CAAhB,EAAmB,EAAnB,CAAnB;AACA,MAAMC,QAAQ,GAAG;AACfJ,IAAAA,EAAE,EAAFA,EADe;AAEfK,IAAAA,KAAK,EAAEf,GAAG,CAACI,IAAJ,CAASW,KAFD;AAGfC,IAAAA,MAAM,EAAEhB,GAAG,CAACI,IAAJ,CAASY,MAHF;AAIfC,IAAAA,MAAM,EAAEjB,GAAG,CAACI,IAAJ,CAASa,MAJF;AAKfX,IAAAA,MAAM,EAAEN,GAAG,CAACI,IAAJ,CAASE,MAAT,IAAmB;AALZ,GAAjB;;AAOA,MAAMY,MAAM,GAAGC,kBAAMC,IAAN,CAAW,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACX,EAAF,KAASC,QAAQ,CAACG,QAAQ,CAACC,KAAV,EAAiB,EAAjB,CAArB;AAAA,GAAZ,CAAf;;AACA,MAAI,CAACG,MAAL,EAAa;AACX,WAAOjB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BD,MAAAA,KAAK,EAAE;AAFmB,KAArB,CAAP;AAID;;AAED,MAAMiB,KAAK,GAAGC,qBAAKH,IAAL,CAAU,UAAAI,CAAC;AAAA,WAAIA,CAAC,CAACd,EAAF,KAASC,QAAQ,CAACG,QAAQ,CAACE,MAAV,EAAkB,EAAlB,CAArB;AAAA,GAAX,CAAd;;AACA,MAAI,CAACM,KAAL,EAAY;AACV,WAAOrB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BD,MAAAA,KAAK,EAAE;AAFmB,KAArB,CAAP;AAID;;AAEDO,4BAAMa,IAAN,CAAWX,QAAX;;AACA,SAAOb,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,GADkB;AAE1BoB,IAAAA,IAAI,EAAE;AACJhB,MAAAA,EAAE,EAAFA,EADI;AAEJM,MAAAA,MAAM,EAAEF,QAAQ,CAACE,MAFb;AAGJW,MAAAA,UAAU,EAAE,0BAASC,MAAT,CAAgB,IAAhB,CAHR;AAIJtB,MAAAA,MAAM,EAAEQ,QAAQ,CAACR,MAJb;AAKJuB,MAAAA,KAAK,EAAEP,KAAK,CAACO,KALT;AAMJC,MAAAA,aAAa,EAAEhB,QAAQ,CAACG;AANpB;AAFoB,GAArB,CAAP;AAWD,CA1CD;;eA4CelB,K","sourceRoot":"C:\\Auto-Mart-Website\\server\\controllers","sourcesContent":["import moment from 'moment';\r\nimport order from '../models/purchaseOrder';\r\nimport users from '../models/users';\r\nimport cars from '../models/postCars';\r\nimport validateOrder from '../helpers/purchaseOrder';\r\n\r\nconst Order = (req, res) => {\r\n  const { error } = validateOrder.validation(req.body);\r\n  if (error) {\r\n    return res.status(400).json({ status: 400, error: error.details[0].message });\r\n  }\r\n\r\n  const id = parseInt(order.length + 1, 10);\r\n  const newOrder = {\r\n    id,\r\n    buyer: req.body.buyer,\r\n    car_id: req.body.car_id,\r\n    amount: req.body.amount,\r\n    status: req.body.status || 'pending',\r\n  };\r\n  const userId = users.find(b => b.id === parseInt(newOrder.buyer, 10));\r\n  if (!userId) {\r\n    return res.status(404).json({\r\n      status: 404,\r\n      error: 'buyer id not found',\r\n    });\r\n  }\r\n\r\n  const carId = cars.find(c => c.id === parseInt(newOrder.car_id, 10));\r\n  if (!carId) {\r\n    return res.status(404).json({\r\n      status: 404,\r\n      error: 'car ordered not found',\r\n    });\r\n  }\r\n\r\n  order.push(newOrder);\r\n  return res.status(201).json({\r\n    status: 201,\r\n    data: {\r\n      id,\r\n      car_id: newOrder.car_id,\r\n      created_on: moment().format('LL'),\r\n      status: newOrder.status,\r\n      price: carId.price,\r\n      price_offered: newOrder.amount,\r\n    },\r\n  });\r\n};\r\n\r\nexport default Order;\r\n"]}