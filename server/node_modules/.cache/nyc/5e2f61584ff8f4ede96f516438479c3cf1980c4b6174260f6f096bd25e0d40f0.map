{"version":3,"sources":["updatePosted.js"],"names":["price","req","res","validatePostedPrice","validation","body","error","status","json","details","message","carId","params","id","carIndex","cars","findIndex","o","parseInt","originalCar","newCar","owner","createdOn","format","state","manufacturer","model","body_type","data"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,8BACRC,wBAAoBC,UAApB,CAA+BH,GAAG,CAACI,IAAnC,CADQ;AAAA,MAClBC,KADkB,yBAClBA,KADkB;;AAE1B,MAAIA,KAAJ,EAAW;AACTJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBD,MAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC;AAFL,KAArB;AAIA;AACD;;AACD,MAAMC,KAAK,GAAGV,GAAG,CAACW,MAAJ,CAAWC,EAAzB;;AACA,MAAMC,QAAQ,GAAGC,iBAAKC,SAAL,CAAe,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACJ,EAAF,KAASK,QAAQ,CAACP,KAAD,EAAQ,EAAR,CAArB;AAAA,GAAhB,CAAjB;;AACA,MAAIG,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AACjB,QAAMK,WAAW,GAAGJ,iBAAKD,QAAL,CAApB;AACA,QAAMM,MAAM,GAAG;AACbP,MAAAA,EAAE,EAAEM,WAAW,CAACN,EADH;AAEbQ,MAAAA,KAAK,EAAEF,WAAW,CAACE,KAFN;AAGbC,MAAAA,SAAS,EAAE,0BAASC,MAAT,CAAgB,IAAhB,CAHE;AAIbC,MAAAA,KAAK,EAAEL,WAAW,CAACK,KAJN;AAKbjB,MAAAA,MAAM,EAAEY,WAAW,CAACZ,MALP;AAMbP,MAAAA,KAAK,EAAEC,GAAG,CAACI,IAAJ,CAASL,KANH;AAObyB,MAAAA,YAAY,EAAEN,WAAW,CAACM,YAPb;AAQbC,MAAAA,KAAK,EAAEP,WAAW,CAACO,KARN;AASbC,MAAAA,SAAS,EAAER,WAAW,CAACQ;AATV,KAAf;AAWAZ,qBAAKD,QAAL,IAAiB;AACfD,MAAAA,EAAE,EAAEM,WAAW,CAACN,EADD;AAEfQ,MAAAA,KAAK,EAAEF,WAAW,CAACE,KAFJ;AAGfC,MAAAA,SAAS,EAAEF,MAAM,CAACE,SAHH;AAIfE,MAAAA,KAAK,EAAEL,WAAW,CAACK,KAJJ;AAKfjB,MAAAA,MAAM,EAAEY,WAAW,CAACZ,MALL;AAMfP,MAAAA,KAAK,EAAEoB,MAAM,CAACpB,KANC;AAOfyB,MAAAA,YAAY,EAAEN,WAAW,CAACM,YAPX;AAQfC,MAAAA,KAAK,EAAEP,WAAW,CAACO,KARJ;AASfC,MAAAA,SAAS,EAAER,WAAW,CAACQ;AATR,KAAjB;AAWAzB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,GADW;AAEnBqB,MAAAA,IAAI,EAAER;AAFa,KAArB;AAIA;AACD;;AACDlB,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,IAAAA,MAAM,EAAE,GADW;AAEnBD,IAAAA,KAAK,EAAE;AAFY,GAArB;AAID,CA7CD;;eA8CeN,K","sourceRoot":"G:\\Auto-Mart-Website\\server\\controllers","sourcesContent":["import moment from 'moment';\r\nimport validatePostedPrice from '../helpers/postedPrice';\r\nimport cars from '../models/cars';\r\n\r\nconst price = (req, res) => {\r\n  const { error } = validatePostedPrice.validation(req.body);\r\n  if (error) {\r\n    res.status(400).json({\r\n      status: 400,\r\n      error: error.details[0].message,\r\n    });\r\n    return;\r\n  }\r\n  const carId = req.params.id;\r\n  const carIndex = cars.findIndex(o => o.id === parseInt(carId, 10));\r\n  if (carIndex > -1) {\r\n    const originalCar = cars[carIndex];\r\n    const newCar = {\r\n      id: originalCar.id,\r\n      owner: originalCar.owner,\r\n      createdOn: moment().format('LL'),\r\n      state: originalCar.state,\r\n      status: originalCar.status,\r\n      price: req.body.price,\r\n      manufacturer: originalCar.manufacturer,\r\n      model: originalCar.model,\r\n      body_type: originalCar.body_type,\r\n    };\r\n    cars[carIndex] = {\r\n      id: originalCar.id,\r\n      owner: originalCar.owner,\r\n      createdOn: newCar.createdOn,\r\n      state: originalCar.state,\r\n      status: originalCar.status,\r\n      price: newCar.price,\r\n      manufacturer: originalCar.manufacturer,\r\n      model: originalCar.model,\r\n      body_type: originalCar.body_type,\r\n    };\r\n    res.status(200).json({\r\n      status: 200,\r\n      data: newCar,\r\n    });\r\n    return;\r\n  }\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'car post not found',\r\n  });\r\n};\r\nexport default price;\r\n"]}