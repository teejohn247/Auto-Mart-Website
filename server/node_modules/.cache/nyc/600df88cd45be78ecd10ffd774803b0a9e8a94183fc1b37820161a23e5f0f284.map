{"version":3,"sources":["ads.js"],"names":["postAds","req","res","validateCars","validation","body","error","status","json","details","message","postAd","id","parseInt","postCars","length","createdOn","Date","owner","email","manufacturer","model","price","state","user","users","find","p","push","data"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,8BACVC,yBAAaC,UAAb,CAAwBH,GAAG,CAACI,IAA5B,CADU;AAAA,MACpBC,KADoB,yBACpBA,KADoB;;AAE5B,MAAIA,KAAJ,EAAW;AACT,WAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeD,MAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC;AAAvC,KAArB,CAAP;AACD;;AAED,MAAMC,MAAM,GAAG;AACbC,IAAAA,EAAE,EAACC,QAAQ,CAACC,qBAASC,MAAT,GAAkB,CAAnB,EAAsB,EAAtB,CADE;AAEbC,IAAAA,SAAS,EAAEC,IAAI,EAFF;AAGbC,IAAAA,KAAK,EAAEjB,GAAG,CAACI,IAAJ,CAASa,KAHH;AAIbC,IAAAA,KAAK,EAAElB,GAAG,CAACI,IAAJ,CAASc,KAJH;AAKbC,IAAAA,YAAY,EAAEnB,GAAG,CAACI,IAAJ,CAASe,YALV;AAMbC,IAAAA,KAAK,EAAEpB,GAAG,CAACI,IAAJ,CAASgB,KANH;AAObC,IAAAA,KAAK,EAAErB,GAAG,CAACI,IAAJ,CAASiB,KAPH;AAQbC,IAAAA,KAAK,EAAEtB,GAAG,CAACI,IAAJ,CAASkB,KARH;AASbhB,IAAAA,MAAM,EAAEN,GAAG,CAACI,IAAJ,CAASE;AATJ,GAAf;;AAYA,MAAMiB,IAAI,GAAGC,kBAAMC,IAAN,CAAW,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACR,KAAF,KAAYR,MAAM,CAACQ,KAAvB;AAAA,GAAZ,CAAb;;AACA,MAAI,CAACK,IAAL,EAAW;AACT,WAAOtB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BD,MAAAA,KAAK,EAAE;AAFmB,KAArB,CAAP;AAID;;AAEDQ,uBAASc,IAAT,CAAcjB,MAAd;;AACA,SAAOT,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,GADkB;AAE1BsB,IAAAA,IAAI,EAAElB;AAFoB,GAArB,CAAP;AAID,CA/BD;;eAiCeX,O","sourceRoot":"C:\\Auto-Mart-Website\\server\\controllers","sourcesContent":["import moment from 'moment';\r\nimport postCars from '../models/postCars';\r\nimport users from '../models/users';\r\nimport validateCars from '../helpers/validateCars';\r\n\r\nconst postAds = (req, res) => {\r\n  const { error } = validateCars.validation(req.body);\r\n  if (error) {\r\n    return res.status(400).json({ status: 400, error: error.details[0].message });\r\n  }\r\n\r\n  const postAd = {\r\n    id:parseInt(postCars.length + 1, 10),\r\n    createdOn: Date(),\r\n    owner: req.body.owner,\r\n    email: req.body.email,\r\n    manufacturer: req.body.manufacturer,\r\n    model: req.body.model,\r\n    price: req.body.price,\r\n    state: req.body.state,\r\n    status: req.body.status\r\n  }\r\n  \r\n  const user = users.find(p => p.email === postAd.email);\r\n  if (!user) {\r\n    return res.status(404).json({\r\n      status: 404,\r\n      error: 'User not found',\r\n    });\r\n  }\r\n\r\n  postCars.push(postAd);\r\n  return res.status(201).json({\r\n    status: 201,\r\n    data: postAd\r\n  });\r\n};\r\n\r\nexport default postAds;\r\n"]}